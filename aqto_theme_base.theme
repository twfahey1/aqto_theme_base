<?php

declare(strict_types=1);

/**
 * @file
 * Functions to support theming in the aqto_theme_base theme.
 */

/**
 * Implements hook_preprocess_HOOK() for html.html.twig.
 */
function aqto_theme_base_preprocess_html(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for page.html.twig.
 */
function aqto_theme_base_preprocess_page(array &$variables): void {

}

/**
 * Implements hook_preprocess_HOOK() for node.html.twig.
 */
function aqto_theme_base_preprocess_node(array &$variables): void {

}

/**
 * Implements hook_preprocess_links() for links.html.twig. 
 */
function aqto_theme_base_preprocess_links(array &$variables): void {
    /**
     * We want to add a $link_classes array to our {{ item.link }} when we are rendering, and for now lets add "btn-base" to it.
     */
    $link_classes = [
        'btn-base',
    ];
    foreach ($variables['links'] as &$link) {
        foreach ($link_classes as $class) {
            $link['link']['#attributes']['class'][] = $class;
        }
    }
    
}

/**
 * Implements hook_preprocess_menu_local_task().
 */
function aqto_theme_base_preprocess_menu_local_task(array &$variables): void {
    // We'll have $variables["is_active"] which means we want to apply "btn-base" to attributes of the $variables['element']['#attributes']['class'][]. Otherwise, we'll put "btn-blue".
    if (!empty($variables['is_active'])) {
        $variables['link']['#attributes']['class'][] = 'btn-base';
    }
    else {       
        $variables['link']['#attributes']['class'][] = 'btn-blue';
    }
        
}

/**
 * Implements hook_preprocess_menu_local_tasks().
 */
function aqto_theme_base_preprocess_menu_local_tasks(array &$variables): void {
    // We want to add a class to the $variables['primary']['#attributes']['class'][] array. Let's add "btn-group".
    // $variables['primary']['#attributes']['class'][] = 'btn-group';
}

/**
 * Implements hook_preprocess input__submit().
 */
function aqto_theme_base_preprocess_input__submit(array &$variables): void {
    // We want to add a class to the $variables['attributes']['class'][] array. Let's add "btn-base".
    $variables['attributes']['class'][] = 'btn-base';
}

/**
 * Implements hook_theme_suggestions_HOOK_alter() for form_element hook to add form element suggestions.
 */
function admininternet_theme_base_theme_suggestions_form_element_alter(array &$suggestions, array $variables)
{
    // If there is a $variables['element']['#type'] array, we want to take action. First, let's reverse this array. Then, we iterate through, adding a suggestion for "form_element__" . [the first one], then "form_element__" . [the first one] . "__" . [the second one], and so on.
    if (isset($variables['element']['#type']) && !is_array($variables['element']['#type'])) {
      $element_type = $variables['element']['#type'];
      $suggestions[] = 'form_element__' . $element_type;
    }
}


/**
 * Implements hook_theme_suggestions_HOOK_alter().
 */
function admininternet_theme_base_theme_suggestions_form_alter(array &$suggestions, array $variables)
{
    // If there is a $variables['element']['#theme'] array, we want to take action. First, let's reverse this array. Then, we iterate through, adding a suggestion for "form__" . [the first one], then "form__" . [the first one] . "__" . [the second one], and so on.
    if (isset($variables['element']['#theme']) && is_array($variables['element']['#theme'])) {
        $theme_suggestions = $variables['element']['#theme'];
        $theme_suggestions = array_reverse($theme_suggestions);
        $build_suggestions = '';
        foreach ($theme_suggestions as $theme_suggestion) {
            $suggestions[] = 'form__' . $theme_suggestion;
            if ($build_suggestions == '') {
                $build_suggestions = $theme_suggestion;
            } else {
                $build_suggestions = $theme_suggestion . '__' . $build_suggestions;
            }
        }
    }


}